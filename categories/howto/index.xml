<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>howto on Fierce Falcon Laboratory</title>
    <link>https://ngkz.github.io/categories/howto/</link>
    <description>Recent content in howto on Fierce Falcon Laboratory</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 12 Jan 2020 01:31:22 +0900</lastBuildDate><atom:link href="https://ngkz.github.io/categories/howto/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GnuPG Hardening</title>
      <link>https://ngkz.github.io/2020/01/gpg-hardening/</link>
      <pubDate>Sun, 12 Jan 2020 01:31:22 +0900</pubDate>
      
      <guid>https://ngkz.github.io/2020/01/gpg-hardening/</guid>
      <description>&lt;p&gt;SHA-1 is &lt;a href=&#34;https://sha-mbles.github.io/&#34;&gt;completely&lt;/a&gt; &lt;a href=&#34;https://shattered.io/&#34;&gt;dead&lt;/a&gt;. And I noticed legacy GPG signed my PGP key with SHA-1.&lt;/p&gt;
&lt;h2 id=&#34;improving-gpg-configuration&#34;&gt;Improving GPG Configuration&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ vim ~/.gnupg/gpg.conf
# use SHA-512 when signing a key
cert-digest-algo SHA512
# override recipient key cipher preferences
# remove 3DES and prefer AES256
personal-cipher-preferences AES256 AES192 AES CAST5
# override recipient key digest preferences
# remove SHA-1 and prefer SHA-512
personal-digest-preferences SHA512 SHA384 SHA256 SHA224
# remove SHA-1 and 3DES from cipher preferences of newly created key
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed
# reject SHA-1 signature
weak-digest SHA1
# never allow use 3DES
disable-cipher-algo 3DES
# use AES256 when symmetric encryption
s2k-cipher-algo AES256
# use SHA-512 when symmetric encryption
s2k-digest-algo SHA-512
# mangle password many times as possible when symmetric encryption
s2k-count 65011712
# both short and long key IDs are insecure
keyid-format none
# use full fingerprint instead
with-subkey-fingerprint
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;migrating-signature-digest-to-sha-512&#34;&gt;Migrating signature digest to SHA-512&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>ステンレスカップにメモリをつけてみた</title>
      <link>https://ngkz.github.io/2019/06/howto-etch-stainless-mug/</link>
      <pubDate>Sun, 09 Jun 2019 17:34:45 +0900</pubDate>
      
      <guid>https://ngkz.github.io/2019/06/howto-etch-stainless-mug/</guid>
      <description>&lt;h2 id=&#34;一ヶ月半前くらいの話&#34;&gt;一ヶ月半前くらいの話&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://imgur.com/a/dCvS5&#34;&gt;酢と塩と9V電池でステンレス鍋に目盛りをつける方法&lt;/a&gt;を知ったので、計量カップを追い出して旅行の荷物を減らすためにステンレスマグを計量カップ化してみた。&lt;/p&gt;
&lt;h2 id=&#34;どうやるの&#34;&gt;どうやるの&lt;/h2&gt;
&lt;p&gt;上のリンクの内容を要約すると&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;印をつけたい部分の周辺をマスキング&lt;/li&gt;
&lt;li&gt;酢と塩を混ぜて綿棒の先につける&lt;/li&gt;
&lt;li&gt;綿棒を9V電池のマイナス、ステンレスマグを9V電池のプラスに接続&lt;/li&gt;
&lt;li&gt;綿棒の先をエッチングしたい部分に押し付ける&lt;/li&gt;
&lt;li&gt;シュワシュワという音がして数秒くらいで印が点く&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;自分の場合は酢にやさしい酢を使ったのと、印をつける面がヘアライン加工されていたせいか、9V電池では目盛りがつくのに時間がかかったので、電源電圧を12Vに上げて反応速度を上げた。&lt;/p&gt;
&lt;h2 id=&#34;底で試す&#34;&gt;底で試す&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>内蔵HDDに入ってるWindows 10をUSB HDDから起動できるようにする方法</title>
      <link>https://ngkz.github.io/2019/06/howto-boot-preinstalled-windows-from-usb-hdd/</link>
      <pubDate>Sun, 02 Jun 2019 13:14:41 +0900</pubDate>
      
      <guid>https://ngkz.github.io/2019/06/howto-boot-preinstalled-windows-from-usb-hdd/</guid>
      <description>&lt;p&gt;Windowsが入った内蔵HDDをUSB経由で接続し、そこから起動しようとするとSTOPエラーで失敗するが、レジストリの&lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM&lt;/code&gt;の&lt;code&gt;HardwareConfig&lt;/code&gt;キー中の&lt;code&gt;BootDriverFlags&lt;/code&gt;を&lt;code&gt;0x14&lt;/code&gt;に設定すると、USBストレージから起動できるようになる。&lt;/p&gt;
&lt;p&gt;ただし、このHDDを使ってWindowsを起動すると、接続したマシンのUEFIのブートエントリにWindowsが登録されてしまう。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ubuntu 19.04 タッチパッドの誤タップ対策</title>
      <link>https://ngkz.github.io/2019/05/ubuntu-1904-reenable-touchpad-palm-detection/</link>
      <pubDate>Fri, 03 May 2019 13:57:33 +0900</pubDate>
      
      <guid>https://ngkz.github.io/2019/05/ubuntu-1904-reenable-touchpad-palm-detection/</guid>
      <description>&lt;p&gt;Ubuntu 19.04へアップグレードしたら、手のひら検知と入力中にタッチパッドを無効にする機能がオフになり、入力中にカーソルが勝手にあちこちに飛ぶようになってしまった。&lt;/p&gt;
&lt;p&gt;以下の手順で設定して、Xサーバーを再起動(再ログイン)すると再有効化できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo -e /etc/X11/xorg.conf.d/90-libinput.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;Section &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;InputClass&amp;#34;&lt;/span&gt;
    Identifier &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;libinput touchpad catchall&amp;#34;&lt;/span&gt;
    MatchIsTouchpad &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;on&amp;#34;&lt;/span&gt;
    MatchDevicePath &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/dev/input/event*&amp;#34;&lt;/span&gt;
    Driver &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;libinput&amp;#34;&lt;/span&gt;
    Option &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tapping&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;True&amp;#34;&lt;/span&gt;
    Option &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DisableWhileTyping&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;True&amp;#34;&lt;/span&gt;
EndSection
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>AFWall&#43; を有効にするとBluetoothテザリングで通信できなくなるのをなおす</title>
      <link>https://ngkz.github.io/2019/01/afwall-bt-tethering/</link>
      <pubDate>Sun, 13 Jan 2019 20:20:09 +0900</pubDate>
      
      <guid>https://ngkz.github.io/2019/01/afwall-bt-tethering/</guid>
      <description>&lt;p&gt;AFWall+を有効にしていると、Bluetoothテザリングで接続したクライアントが通信できなくなるのをなんとかする。&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;
&lt;p&gt;ログと検索エンジンで調べたところ、AFWall+がBluetoothテザリングに対応していないため、クライアントにDHCPとDNS Proxyを提供しているdnsmasqからのDNS通信がブロックされてしまっていることが分かった。&lt;/p&gt;
&lt;h2 id=&#34;解決策1-dnsを手動設定する&#34;&gt;解決策1: DNSを手動設定する&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>EDIDが壊れて認識しないモニターの修理</title>
      <link>https://ngkz.github.io/2019/01/edid-repair/</link>
      <pubDate>Sun, 06 Jan 2019 17:19:12 +0900</pubDate>
      
      <guid>https://ngkz.github.io/2019/01/edid-repair/</guid>
      <description>&lt;p&gt;Acer H243HをDVIで接続すると認識しない。VGA接続とHDMI接続では正常に動作するが、DVIで接続するとsyslogに以下のエラーが出る。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Jan  5 23:48:32 haramaki kernel: [97894.621687] amdgpu 0000:01:00.0: DVI-D-1: EDID is invalid:
Jan  5 23:48:32 haramaki kernel: [97894.621694]         [00] BAD  00 ff ff ff ff ff ff 00 ff ff ff ff ff ff ff ff
Jan  5 23:48:32 haramaki kernel: [97894.621696]         [00] BAD  2b 13 01 03 80 35 1d 78 ea 60 85 a6 56 4a 9c 25
Jan  5 23:48:32 haramaki kernel: [97894.621697]         [00] BAD  12 50 54 af cf 00 81 80 71 4f 95 00 95 0f a9 40
Jan  5 23:48:32 haramaki kernel: [97894.621698]         [00] BAD  b3 00 01 01 01 01 1a 36 80 a0 70 38 1f 40 30 20
Jan  5 23:48:32 haramaki kernel: [97894.621699]         [00] BAD  35 00 13 2a 21 00 00 1a 00 00 00 fc 00 48 32 34
Jan  5 23:48:32 haramaki kernel: [97894.621700]         [00] BAD  33 48 0a 20 20 20 20 20 20 20 00 00 00 fd 00 38
Jan  5 23:48:32 haramaki kernel: [97894.621701]         [00] BAD  4c 1f 53 12 00 0a 20 20 20 20 20 20 00 00 00 ff
Jan  5 23:48:32 haramaki kernel: [97894.621702]         [00] BAD  00 4c 45 57 30 43 30 31 34 34 30 31 31 0a 00 33
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;どうやらEDIDが壊れているようだ。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DOOM Emacsの導入方法 &amp; 設定例</title>
      <link>https://ngkz.github.io/2018/10/doom-emacs-develop-setup/</link>
      <pubDate>Sat, 20 Oct 2018 10:50:27 +0900</pubDate>
      
      <guid>https://ngkz.github.io/2018/10/doom-emacs-develop-setup/</guid>
      <description>&lt;h2 id=&#34;動機&#34;&gt;動機&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;収録ソフトウェアがかなり古くなってきている Ubuntu 14.04 から Linux From Scratch に移行しよう&lt;/li&gt;
&lt;li&gt;この機会に neovim に移行して、vim の設定を一から書き直そう&lt;/li&gt;
&lt;li&gt;エディタ部分は大量に設定を書かないと使い勝手が悪いし、プラグインの導入と設定も面倒だ&lt;/li&gt;
&lt;li&gt;vim 風のキーバインディングで、よりすぐれた操作性を持つ &lt;a href=&#34;http://kakoune.org/why-kakoune/why-kakoune.html&#34;&gt;Kakoune というエディタがあるらしい&lt;/a&gt;。&lt;a href=&#34;https://github.com/ngkz/kakrc&#34;&gt;試してみよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;たしかに、設計・デフォルト設定や操作性は vim より良いが、プラグインが足りない&lt;/li&gt;
&lt;li&gt;じゃあプラグインが充実している Emacs だ。素の Emacs は設定が大変らしいから、&lt;a href=&#34;http://spacemacs.org/&#34;&gt;spacemacs&lt;/a&gt;も試してみよう。&lt;/li&gt;
&lt;li&gt;起動が遅い&lt;/li&gt;
&lt;li&gt;Spacemacs より軽い DOOM Emacs というのがあるらしい。これにしよう&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>テストをrootとして動かす方法 (Rust)</title>
      <link>https://ngkz.github.io/2018/08/cargo-run-test-with-sudo/</link>
      <pubDate>Wed, 01 Aug 2018 17:37:33 +0900</pubDate>
      
      <guid>https://ngkz.github.io/2018/08/cargo-run-test-with-sudo/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/rust-lang/cargo/issues/1924&#34;&gt;https://github.com/rust-lang/cargo/issues/1924&lt;/a&gt; によると、&lt;code&gt;cargo test --no-run --message-format=json | jq -r &amp;quot;select(.profile.test == true) | .filenames[]&amp;quot;&lt;/code&gt; でテストバイナリの一覧が取得できる。これをsudoで実行するスクリプトを作ればOK&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>依存しているパッケージ(crate)の中身を実行せずに調べる方法 (Rust)</title>
      <link>https://ngkz.github.io/2018/07/audit-cargo-crate/</link>
      <pubDate>Wed, 25 Jul 2018 22:24:30 +0900</pubDate>
      
      <guid>https://ngkz.github.io/2018/07/audit-cargo-crate/</guid>
      <description>cargo fetch1 でパッケージを取得すると、~/.cargo/registry/src/github.com-1ecc6299db9ec823/(パッケージ名)-(バージョン) にパッケージのソースコードが展開される。
Cargo.lockにすべての依存クレートの名前とバージョンが記録されているので、これを見てコードに問題がないか調べることができる。
  cargo buildはビルドスクリプトを実行してしまうのでダメ&amp;#160;&amp;#x21a9;&amp;#xfe0e;
   </description>
    </item>
    
    <item>
      <title>Galaxy S3(SC-06D)がadbバックアップを戻した後再起動を繰り返すようになったときの対処方法</title>
      <link>https://ngkz.github.io/2013/09/galaxys3-adb-restore-fail/</link>
      <pubDate>Thu, 12 Sep 2013 13:29:56 +0900</pubDate>
      
      <guid>https://ngkz.github.io/2013/09/galaxys3-adb-restore-fail/</guid>
      <description>&lt;h2 id=&#34;リカバリモードに入ってファクトリーリセットする&#34;&gt;リカバリモードに入ってファクトリーリセットする&lt;/h2&gt;
&lt;p&gt;galaxy S3 リカバリモードの入り方:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;バックアップを展開&#34;&gt;バックアップを展開&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>トレイに格納したKeePassXを復元できるようにする方法</title>
      <link>https://ngkz.github.io/2013/03/howto-reactivate-keepassx/</link>
      <pubDate>Thu, 14 Mar 2013 17:21:07 +0900</pubDate>
      
      <guid>https://ngkz.github.io/2013/03/howto-reactivate-keepassx/</guid>
      <description>&lt;p&gt;Ubuntu 12.10-14.04で確認済み&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &amp;quot;keepassx=1&amp;quot; &amp;gt;&amp;gt; /etc/xdg/sni-qt.conf
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
